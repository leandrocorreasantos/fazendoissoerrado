# Generated by Django 2.2 on 2020-11-08 18:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('slug', models.CharField(max_length=255, null=True, verbose_name='Slug')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Título')),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.CharField(max_length=255, null=True)),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('meta_description', models.TextField(verbose_name='meta-escription')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='post/cover/', verbose_name='Capa')),
                ('published', models.BooleanField(default=False, verbose_name='Publicado')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Criado em')),
                ('published_date', models.DateTimeField(blank=True, null=True, verbose_name='Publicado em')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='blog.Category')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
    ]
